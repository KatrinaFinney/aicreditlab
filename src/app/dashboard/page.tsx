"use client";

import { useEffect } from "react";
import { supabase } from "@/lib/supabaseClient";
import { gsap } from "gsap";
import useSWR from "swr";
import { useAuth } from "@clerk/nextjs";

// Color & Font Choices (Matching Homepage)
const DASHBOARD_BG = "linear-gradient(135deg, #1B0036 0%, #3C1F52 100%)"; // Deep Indigo Gradient
const TEXT_SECONDARY = "#A6A6A6";
const CARD_BG = "#2A1B3C"; // Darker card background
const TEAL_H1 = "#0097A7"; // Teal used for primary headings
const PURPLE_ACCENT = "#A855F7"; // Purple Accent for highlights
const HEADING_FONT = '"Orbitron", sans-serif';
const BODY_FONT = '"Inter", sans-serif';

// Define TypeScript Interface for Disputes
interface Dispute {
  id: string;
  creditor: string;
  agency: string;
  status: "Pending" | "Resolved" | "Denied";
}

// Fetch disputes function
async function fetchDisputes(): Promise<Dispute[]> {
  const { data, error } = await supabase
    .from("disputes")
    .select("*")
    .order("created_at", { ascending: false })
    .limit(10);

  if (error) {
    console.error("Supabase fetch error:", error);
    throw new Error(error.message);
  }
  return data || [];
}

export default function Dashboard() {
  const { isSignedIn } = useAuth();
  const { data: disputes, error } = useSWR("disputes", fetchDisputes);

  useEffect(() => {
    // GSAP animation for fade-in effect
    gsap.fromTo(
      ".dashboard-container",
      { opacity: 0, y: 20 },
      { opacity: 1, y: 0, duration: 0.6, ease: "power3.out" }
    );
  }, []);

  if (!isSignedIn) {
    return (
      <p style={{ color: "red", textAlign: "center", marginTop: "2rem" }}>
        Please sign in to view your dashboard.
      </p>
    );
  }

  if (error) {
    return (
      <p style={{ color: "red", textAlign: "center", marginTop: "2rem" }}>
        Error loading disputes.
      </p>
    );
  }

  if (!disputes) {
    return (
      <p style={{ color: PURPLE_ACCENT, textAlign: "center", marginTop: "2rem" }}>
        Loading...
      </p>
    );
  }

  return (
    <div
      className="dashboard-container"
      style={{
        minHeight: "100vh",
        background: DASHBOARD_BG,
        display: "flex",
        flexDirection: "column",
        padding: "40px",
        fontFamily: BODY_FONT,
      }}
    >
      <h1
        style={{
          fontSize: "2.5rem",
          fontWeight: 700,
          color: TEAL_H1,
          fontFamily: HEADING_FONT,
          textShadow: "0px 0px 8px rgba(0, 151, 167, 0.4)",
          marginBottom: "24px",
          textAlign: "center",
        }}
      >
        Your Disputes
      </h1>

      <p
        style={{
          fontSize: "1.125rem",
          color: TEXT_SECONDARY,
          margin: "0 auto 32px",
          maxWidth: "600px",
          textAlign: "center",
        }}
      >
        View and track your latest credit disputes, automatically generated by our AI
        engine. Stay informed and watch your credit transform in real time.
      </p>

      <div
        style={{
          display: "grid",
          gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))",
          gap: "24px",
          maxWidth: "1000px",
          margin: "0 auto",
        }}
      >
        {disputes.length > 0 ? (
          disputes.map((dispute) => (
            <div
              key={dispute.id}
              style={{
                backgroundColor: CARD_BG,
                padding: "20px",
                borderRadius: "12px",
                boxShadow: `0 4px 12px rgba(168, 85, 247, 0.3)`, // Subtle Purple Glow
                transition: "transform 0.3s ease",
              }}
              onMouseEnter={(e) => (e.currentTarget.style.transform = "scale(1.02)")}
              onMouseLeave={(e) => (e.currentTarget.style.transform = "scale(1)")}
            >
              <h3
                style={{
                  fontSize: "1.25rem",
                  fontWeight: "bold",
                  color: PURPLE_ACCENT,
                  fontFamily: HEADING_FONT,
                  marginBottom: "8px",
                }}
              >
                {dispute.creditor}
              </h3>
              <p style={{ fontSize: "0.95rem", color: TEXT_SECONDARY, marginBottom: "4px" }}>
                Agency: {dispute.agency}
              </p>
              <p
                style={{
                  fontSize: "0.95rem",
                  fontWeight: 600,
                  color: dispute.status === "Pending" ? "#FFD700" : "#00FF7F",
                }}
              >
                Status: {dispute.status}
              </p>
            </div>
          ))
        ) : (
          <p style={{ color: TEXT_SECONDARY, textAlign: "center", gridColumn: "1 / -1" }}>
            No disputes found.
          </p>
        )}
      </div>
    </div>
  );
}
