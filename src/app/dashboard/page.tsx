"use client";

import { useEffect, useState } from "react";
import { supabase } from "@/lib/supabaseClient";
import { gsap } from "gsap";
import useSWR from "swr";
import { useAuth } from "@clerk/nextjs";

// Color & Font Choices (matching homepage)
const DASHBOARD_BG = "linear-gradient(135deg, #e0f7f9 0%, #f8fcfc 100%)"; // Teal gradient
const TEXT_MAIN = "#1E1E1E";
const TEAL_H1 = "#0097A7";              // Same teal as homepage H1
const CARD_BG = "#D6D9E0";              // Darker card background
const TEAL_ACCENT = "#006F7A";          // For headings inside cards
const HEADING_FONT = '"Nunito", sans-serif';
const BODY_FONT = '"Inter", sans-serif';

// Example fetcher function
async function fetchDisputes() {
  const { data, error } = await supabase
    .from("disputes")
    .select("*")
    .order("created_at", { ascending: false })
    .limit(10);

  if (error) {
    console.error("Supabase fetch error:", error);
    throw new Error(error.message);
  }
  return data;
}

export default function Dashboard() {
  const { isSignedIn } = useAuth();
  const { data: disputes, error } = useSWR("disputes", fetchDisputes);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // GSAP animation for fade-in
    requestAnimationFrame(() => {
      gsap.fromTo(
        ".dashboard-container",
        { opacity: 0, y: 20 },
        { opacity: 1, y: 0, duration: 0.6, ease: "power3.out" }
      );
    });
  }, []);

  if (!isSignedIn) {
    return (
      <p style={{ color: "red", textAlign: "center", marginTop: "2rem" }}>
        Please sign in to view your dashboard.
      </p>
    );
  }

  if (error) {
    return (
      <p style={{ color: "red", textAlign: "center", marginTop: "2rem" }}>
        Error loading disputes.
      </p>
    );
  }

  if (!disputes) {
    return (
      <p style={{ color: TEAL_ACCENT, textAlign: "center", marginTop: "2rem" }}>
        Loading...
      </p>
    );
  }

  return (
    <div
      className="dashboard-container"
      style={{
        minHeight: "100vh",
        background: DASHBOARD_BG,
        display: "flex",
        flexDirection: "column",
        padding: "40px",
        fontFamily: BODY_FONT,
      }}
    >
      <h1
        style={{
          fontSize: "2.5rem",
          fontWeight: 700,
          color: TEAL_H1,
          fontFamily: HEADING_FONT,
          textShadow: "0px 0px 8px rgba(0, 151, 167, 0.4)",
          marginBottom: "24px",
          textAlign: "center",
        }}
      >
        Your Disputes
      </h1>

      <p
        style={{
          fontSize: "1.125rem",
          color: "#333",
          margin: "0 auto 32px",
          maxWidth: "600px",
          textAlign: "center",
        }}
      >
        View and track your latest credit disputes, automatically generated by our AI
        engine. Stay informed and watch your credit transform in real time.
      </p>

      <div
        style={{
          display: "grid",
          gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))",
          gap: "24px",
          maxWidth: "1000px",
          margin: "0 auto",
        }}
      >
        {disputes.length > 0 ? (
          disputes.map((dispute: any) => (
            <div
              key={dispute.id}
              style={{
                backgroundColor: CARD_BG,
                padding: "20px",
                borderRadius: "12px",
                boxShadow: "0 4px 8px rgba(0, 120, 130, 0.1)",
                transition: "transform 0.3s ease",
              }}
              onMouseEnter={(e) => (e.currentTarget.style.transform = "scale(1.02)")}
              onMouseLeave={(e) => (e.currentTarget.style.transform = "scale(1)")}
            >
              <h3
                style={{
                  fontSize: "1.25rem",
                  fontWeight: "bold",
                  color: TEAL_ACCENT,
                  fontFamily: HEADING_FONT,
                  marginBottom: "8px",
                }}
              >
                {dispute.creditor}
              </h3>
              <p style={{ fontSize: "0.95rem", color: "#333", marginBottom: "4px" }}>
                Agency: {dispute.agency}
              </p>
              <p
                style={{
                  fontSize: "0.95rem",
                  fontWeight: 600,
                  color: dispute.status === "Pending" ? "#FFD700" : "#00FF7F",
                }}
              >
                Status: {dispute.status}
              </p>
            </div>
          ))
        ) : (
          <p style={{ color: "#333", textAlign: "center", gridColumn: "1 / -1" }}>
            No disputes found.
          </p>
        )}
      </div>
    </div>
  );
}
